{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalmunitz/Desktop/WAD/Folder/museek-1/src/components/quiz/OnboardingQuestionnaire.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControlLabel, Checkbox, Typography, Box, IconButton, Paper } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { styled } from '@mui/system';\nimport questions from './Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledDialog = styled(Dialog)(({\n  theme\n}) => ({\n  '& .MuiPaper-root': {\n    backgroundColor: '#f5f5f5',\n    // Light brownish background\n    color: '#3e2723' // Deep brown color\n  }\n}));\n_c = StyledDialog;\nconst StyledButton = styled(Button)(({\n  theme\n}) => ({\n  backgroundColor: '#6d4c41',\n  // Medium brown background\n  color: 'white',\n  '&:hover': {\n    backgroundColor: '#5d4037' // Dark brown color on hover\n  }\n}));\n_c2 = StyledButton;\nconst StyledCheckbox = styled(Checkbox)(({\n  theme\n}) => ({\n  color: '#8d6e63',\n  // Medium brown color\n  '&.Mui-checked': {\n    color: '#5d4037' // Dark brown color when checked\n  }\n}));\n_c3 = StyledCheckbox;\nconst StyledIconButton = styled(IconButton)(({\n  theme\n}) => ({\n  color: '#3e2723' // Deep brown color\n}));\n_c4 = StyledIconButton;\nconst OnboardingQuestionnaire = ({\n  open,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const handleToggle = (questionIndex, option) => {\n    setAnswers(prev => {\n      const newAnswers = {\n        ...prev\n      };\n      if (!newAnswers[questionIndex]) newAnswers[questionIndex] = [];\n      if (newAnswers[questionIndex].includes(option)) {\n        newAnswers[questionIndex] = newAnswers[questionIndex].filter(answer => answer !== option);\n      } else {\n        newAnswers[questionIndex].push(option);\n      }\n      return newAnswers;\n    });\n  };\n  const handleSubmit = () => {\n    console.log('User Answers: ', answers);\n    onSubmit(answers); // Call the onSubmit callback with the answers\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(StyledDialog, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Music Taste Questionnaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), q.options.map(option => {\n            var _answers$index;\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n                checked: ((_answers$index = answers[index]) === null || _answers$index === void 0 ? void 0 : _answers$index.includes(option)) || false,\n                onChange: () => handleToggle(index, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this),\n              label: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this);\n          })]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(OnboardingQuestionnaire, \"SlLgiTL1v/ZMs8/MrcyjPCigSRg=\");\n_c5 = OnboardingQuestionnaire;\nexport default OnboardingQuestionnaire;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StyledDialog\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"StyledCheckbox\");\n$RefreshReg$(_c4, \"StyledIconButton\");\n$RefreshReg$(_c5, \"OnboardingQuestionnaire\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","FormControlLabel","Checkbox","Typography","Box","IconButton","Paper","CloseIcon","styled","questions","jsxDEV","_jsxDEV","StyledDialog","theme","backgroundColor","color","_c","StyledButton","_c2","StyledCheckbox","_c3","StyledIconButton","_c4","OnboardingQuestionnaire","open","onClose","onSubmit","_s","answers","setAnswers","handleToggle","questionIndex","option","prev","newAnswers","includes","filter","answer","push","handleSubmit","console","log","fullWidth","maxWidth","children","display","justifyContent","alignItems","p","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dividers","map","q","index","mb","variant","question","options","_answers$index","control","checked","onChange","label","_c5","$RefreshReg$"],"sources":["/Users/yuvalmunitz/Desktop/WAD/Folder/museek-1/src/components/quiz/OnboardingQuestionnaire.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Box,\n  IconButton,\n  Paper,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { styled } from '@mui/system';\nimport questions from './Questions';\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiPaper-root': {\n    backgroundColor: '#f5f5f5', // Light brownish background\n    color: '#3e2723', // Deep brown color\n  },\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  backgroundColor: '#6d4c41', // Medium brown background\n  color: 'white',\n  '&:hover': {\n    backgroundColor: '#5d4037', // Dark brown color on hover\n  },\n}));\n\nconst StyledCheckbox = styled(Checkbox)(({ theme }) => ({\n  color: '#8d6e63', // Medium brown color\n  '&.Mui-checked': {\n    color: '#5d4037', // Dark brown color when checked\n  },\n}));\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  color: '#3e2723', // Deep brown color\n}));\n\nconst OnboardingQuestionnaire = ({ open, onClose, onSubmit }) => {\n  const [answers, setAnswers] = useState({});\n\n  const handleToggle = (questionIndex, option) => {\n    setAnswers((prev) => {\n      const newAnswers = { ...prev };\n      if (!newAnswers[questionIndex]) newAnswers[questionIndex] = [];\n      if (newAnswers[questionIndex].includes(option)) {\n        newAnswers[questionIndex] = newAnswers[questionIndex].filter(\n          (answer) => answer !== option\n        );\n      } else {\n        newAnswers[questionIndex].push(option);\n      }\n      return newAnswers;\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log('User Answers: ', answers);\n    onSubmit(answers); // Call the onSubmit callback with the answers\n    onClose();\n  };\n\n  return (\n    <StyledDialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <Paper>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={2}>\n          <DialogTitle>Music Taste Questionnaire</DialogTitle>\n          <StyledIconButton onClick={onClose}>\n            <CloseIcon />\n          </StyledIconButton>\n        </Box>\n        <DialogContent dividers>\n          {questions.map((q, index) => (\n            <Box key={index} mb={2}>\n              <Typography variant=\"h6\">{q.question}</Typography>\n              {q.options.map((option) => (\n                <FormControlLabel\n                  key={option}\n                  control={\n                    <StyledCheckbox\n                      checked={answers[index]?.includes(option) || false}\n                      onChange={() => handleToggle(index, option)}\n                    />\n                  }\n                  label={option}\n                />\n              ))}\n            </Box>\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <StyledButton onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n            Submit\n          </StyledButton>\n        </DialogActions>\n      </Paper>\n    </StyledDialog>\n  );\n};\n\nexport default OnboardingQuestionnaire;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}